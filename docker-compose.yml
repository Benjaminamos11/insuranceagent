version: '3.8'

services:
  agent-zero:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50001:50001"
    environment:
      - NODE_ENV=production
      - AGENT_ENV=production
      - PORT=50001
      # Insurance client configuration
      - INSURANCE_CLIENT_ENABLED=true
      - INSURANCE_CLIENT_PATH=/client.html
      # MCP Server configuration
      - MCP_SERVER_ENABLED=true
      - MCP_SERVER_TOKEN=${MCP_SERVER_TOKEN}
      # Database
      - DATABASE_URL=${DATABASE_URL}
      # Payment processing
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      # Email
      - RESEND_API_KEY=${RESEND_API_KEY}
      # Authentication
      - JWT_SECRET=${JWT_SECRET}
      # AI Models
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./prompts:/app/prompts
      - ./memory:/app/memory
    restart: unless-stopped
    networks:
      - agent-zero-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Redis for session management and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - agent-zero-network
    command: redis-server --appendonly yes

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - agent-zero
    restart: unless-stopped
    networks:
      - agent-zero-network

volumes:
  redis_data:

networks:
  agent-zero-network:
    driver: bridge 